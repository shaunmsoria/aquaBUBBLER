import Config = require('../config');
import Api = require('../../core/api');
import Common = require('../visualization');
import Loader = require('../loader');
declare class Text implements Common.Visualization {
    targetElement: HTMLElement;
    loader: Loader;
    private _options;
    private _currentValue;
    private _rendered;
    private _valueTextElement;
    private _valueContainerElement;
    private _titleElement;
    private _counter;
    private _counterDuration;
    private _resultHandler;
    constructor(targetElement: string | HTMLElement, textOptions: Config.VisualizationOptions);
    displayData(resultsPromise: Q.IPromise<Api.QueryResults>, metadata: Api.Metadata, fullReload?: boolean): void;
    private _loadData(results, metadata, fullReload);
    clear(): void;
    private _checkMetaDataIsApplicable(metadata);
    private _showTitle(metadata);
    private _renderText(metadata);
    private _renderQueryNotApplicable();
}
export = Text;
