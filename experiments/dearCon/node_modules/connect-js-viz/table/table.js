var _ = require('underscore');
var Config = require('../config');
var Dataset = require('./dataset');
var TableRenderer = require('./renderer');
var Loader = require('../loader');
var Dom = require('../dom');
var ResultHandling = require('../result-handling');
var Table = (function () {
    function Table(targetElement, suppliedOptions) {
        var defaultTableOptions = {
            fields: {},
            intervals: {}
        }, defaultIntervalOptions = {
            formats: Config.defaultTimeSeriesFormats
        };
        this.targetElement = Dom.getElement(targetElement);
        this._options = _.extend(defaultTableOptions, suppliedOptions);
        this._options.intervals = _.extend(this._options.intervals, defaultIntervalOptions);
        this.loader = new Loader(this.targetElement);
        this._resultHandler = new ResultHandling.ResultHandler();
    }
    Table.prototype.displayData = function (resultsPromise, metadata, fullReload) {
        if (fullReload === void 0) { fullReload = true; }
        this._renderTable(metadata);
        this._resultHandler.handleResult(resultsPromise, metadata, this, this._loadData, fullReload);
    };
    Table.prototype._loadData = function (results, metadata, fullReload) {
        var dataset = new Dataset.TableDataset(metadata, this._options, results.results);
        this._tableWrapper.innerHTML = TableRenderer.renderDataset(dataset);
        this._showTitle();
    };
    Table.prototype.clear = function () {
        this._rendered = false;
        Dom.removeAllChildren(this.targetElement);
    };
    Table.prototype._showTitle = function () {
        var options = this._options, titleText = options.title ? options.title.toString() : '', showTitle = titleText.length > 0;
        this._titleElement.textContent = titleText;
        this._titleElement.style.display = !showTitle ? 'none' : '';
    };
    Table.prototype._renderTable = function (metadata) {
        if (this._rendered)
            return;
        var options = this._options, tableContainer = document.createElement('div'), tableWrapper = document.createElement('div'), results = document.createElement('div'), rootElement = this.targetElement, titleElement = document.createElement('span');
        this.clear();
        tableContainer.className = 'connect-viz connect-table';
        titleElement.className = 'connect-viz-title';
        results.className = 'connect-viz-result';
        tableWrapper.className = 'connect-table-wrapper';
        tableContainer.appendChild(titleElement);
        tableContainer.appendChild(results);
        results.appendChild(tableWrapper);
        rootElement.appendChild(tableContainer);
        this._rendered = true;
        this._tableWrapper = tableWrapper;
        this._titleElement = titleElement;
        this._showTitle();
    };
    return Table;
})();
module.exports = Table;
