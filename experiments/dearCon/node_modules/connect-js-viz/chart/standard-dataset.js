var Dataset = require('./dataset');
var _ = require('underscore');
var StandardDataset = (function () {
    function StandardDataset(results, metadata, formatters) {
        this._selectLabels = [];
        this._data = [];
        this._metadata = metadata;
        this._selectLabelFormatter = formatters.selectLabelFormatter;
        this._groupValueFormatter = formatters.groupValueFormatter;
        this._selectLabels = this._mapLabels(results);
        this._data = this._mapData(results);
    }
    StandardDataset.prototype.getLabels = function () {
        return Dataset.getLabels(this._selectLabels);
    };
    StandardDataset.prototype.getSelect = function (label) {
        return Dataset.getSelect(this._selectLabels, label);
    };
    StandardDataset.prototype.getData = function () {
        return this._data;
    };
    StandardDataset.prototype._mapLabels = function (results) {
        var _this = this;
        return _.map(this._metadata.selects, function (select) { return {
            select: select,
            label: _this._selectLabelFormatter(select)
        }; });
    };
    StandardDataset.prototype._mapData = function (results) {
        var _this = this;
        return _.map(results, function (result) {
            var isGrouped = _this._metadata.groups.length > 0, interval = result['interval'], mappedResult = _this._mapResult(result), groupPath = Dataset.getGroupPath(result, _this._metadata.groups, _this._groupValueFormatter);
            if (interval) {
                mappedResult['_x'] = interval['start'];
            }
            else {
                mappedResult['_x'] = isGrouped ? groupPath : ' ';
            }
            return mappedResult;
        });
    };
    StandardDataset.prototype._mapResult = function (result) {
        var _this = this;
        var mappedResult = {}, origResult = this._metadata.interval ? result.results[0] : result;
        _.each(this._metadata.selects, function (select) { return mappedResult[_this._selectLabelFormatter(select)] = origResult[select]; });
        return mappedResult;
    };
    return StandardDataset;
})();
module.exports = StandardDataset;
