import Config = require('../config');
import Api = require('../../core/api');
import Common = require('../visualization');
import Loader = require('../loader');
declare class Gauge implements Common.Visualization {
    targetElement: HTMLElement;
    loader: Loader;
    private _options;
    private _minSelectName;
    private _maxSelectName;
    private _gauge;
    private _rendered;
    private _titleElement;
    private _currentDataset;
    private _transitionDuration;
    private _resultHandler;
    constructor(targetElement: string | HTMLElement, gaugeOptions: Config.VisualizationOptions);
    private _parseOptions(gaugeOptions);
    private _initializeFieldOptions(metadata);
    displayData(resultsPromise: Q.IPromise<Api.QueryResults>, metadata: Api.Metadata, fullReload?: boolean): void;
    private _parseMetaData(metadata);
    private _loadData(results, metadata, fullReload);
    clear(): void;
    private _buildDataset(resultItems, metadata);
    private _showTitle();
    private _formatValueForLabel(label, value);
    private _formatGroupValue(groupByName, groupValue);
    private _renderGauge(metadata);
}
export = Gauge;
