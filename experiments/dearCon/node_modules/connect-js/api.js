var request = require('superagent');
var Q = require('q');
var Api;
(function (Api) {
    var Client = (function () {
        function Client(baseUrl, apiKey) {
            this._baseUrl = baseUrl;
            this._apiKey = apiKey;
        }
        Client.prototype.query = function (collection, query) {
            var deferred = Q.defer(), queryJson = JSON.stringify(query), url = this._buildUrl('/events/' + collection + '?query=' + queryJson), get = request.get(url);
            return this._send(get);
        };
        Client.prototype.pushBatch = function (batches) {
            var url = this._buildUrl('/events'), post = request.post(url).send(batches);
            return this._send(post);
        };
        Client.prototype.push = function (collection, newEvent) {
            var url = this._buildUrl('/events/' + collection), post = request.post(url).send(newEvent);
            return this._send(post);
        };
        Client.prototype._send = function (requestToSend) {
            var deferred = Q.defer();
            requestToSend.set('X-API-Key', this._apiKey).end(function (err, res) {
                if (err) {
                    if (!err.status) {
                        err.status = 'NetworkFailure';
                    }
                    deferred.reject(err);
                    return;
                }
                if (!res.ok) {
                    deferred.reject(res.error);
                    return;
                }
                deferred.resolve(res.body);
            });
            return deferred.promise;
        };
        Client.prototype._buildUrl = function (path) {
            return this._baseUrl + path;
        };
        return Client;
    })();
    Api.Client = Client;
})(Api || (Api = {}));
module.exports = Api;
