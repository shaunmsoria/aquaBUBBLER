var Timeframes = require('./timeframes');
var QueryBuilder = (function () {
    function QueryBuilder() {
    }
    QueryBuilder.prototype.build = function (selects, filters, groups, timeframe, interval, timezone) {
        var query = {
            select: selects || {}
        };
        if (filters.length > 0) {
            query['filter'] = this._buildFilter(filters);
        }
        if (groups.length > 0) {
            query['groupBy'] = groups;
        }
        if (timeframe) {
            query['timeframe'] = this._buildTimeframe(timeframe);
        }
        if (interval) {
            query['interval'] = interval;
        }
        if (timezone) {
            query['timezone'] = timezone;
        }
        return query;
    };
    QueryBuilder.prototype._buildFilter = function (filters) {
        var queryFilter = {};
        filters.forEach(function (filter) {
            var fieldFilters = queryFilter[filter.field];
            if (!fieldFilters) {
                fieldFilters = {};
                queryFilter[filter.field] = fieldFilters;
            }
            fieldFilters[filter.operator] = filter.value;
        });
        return queryFilter;
    };
    QueryBuilder.prototype._buildTimeframe = function (timeframe) {
        if (typeof timeframe === 'string') {
            return timeframe;
        }
        else if (timeframe instanceof Timeframes.AbsoluteTimeframe) {
            return this._buildAbsoluteTimeframe(timeframe);
        }
        else if (timeframe instanceof Timeframes.RelativeTimeframe) {
            return this._buildRelativeTimeframe(timeframe);
        }
    };
    QueryBuilder.prototype._buildRelativeTimeframe = function (timeframe) {
        var queryTimeframe = {}, direction = timeframe.direction();
        queryTimeframe[direction] = {};
        queryTimeframe[direction][timeframe.period] = timeframe.length;
        return queryTimeframe;
    };
    QueryBuilder.prototype._buildAbsoluteTimeframe = function (timeframe) {
        var queryTimeframe = {};
        if (timeframe.start) {
            queryTimeframe['start'] = timeframe.start;
        }
        if (timeframe.end) {
            queryTimeframe['end'] = timeframe.end;
        }
        return queryTimeframe;
    };
    return QueryBuilder;
})();
module.exports = QueryBuilder;
